from termcolor import colored
from funcs import hashstring
from database import db

def main():
    print(colored("–í–µ—Ä—Å–∏—è Python 3.11.2.", "blue"))
    print(colored("–†–µ–∫–æ–º–µ–Ω–¥—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DB Browser for SQLite", "cyan"))
    print(colored("-> https://sqlitebrowser.org/dl/ ", "magenta"))

    if input(colored('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (Y)es/(N)o: ', 'cyan')).lower() != 'y':
        return
    
    text1, text2 = "–ú–∞–∫—É—Ö–∏–Ω –ê—Ä—Ç–µ–º –°–µ—Ä–≥–µ–µ–≤–∏—á", "090301-–ü–û–í–∞-–æ24"

    hexhash1 = hashstring(text1)
    hexhash2 = hashstring(text2)

    print(colored(f"üîê –•—ç—à —Å—Ç—Ä–æ–∫–∏ '{text1}': {hexhash1}", "yellow"))
    print(colored(' —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –¥–ª—è —Å—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π\n–í–æ–∑—å–º–µ–º –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ–∫—É, –∏ —Å—Ä–∞–≤–Ω–∏–º —Ö—ç—à–∏', "cyan"))
    print(colored(f"üîê –•—ç—à —Å—Ç—Ä–æ–∫–∏ '{text2}': {hexhash2}", "yellow"))

    result = colored("‚úî –í—Å–µ –Ω–æ—Ä–º, —Ö—ç—à–∏ –Ω–µ —Ä–∞–≤–Ω—ã. —Ç–∞–∫ –∏ –Ω–∞–¥–æ", "green") if (hexhash1 != hexhash2) else colored("üí© –•–µ—à–∏ —Ä–∞–≤–Ω—ã, –∑–Ω–∞—á–∏—Ç —É –º–µ–Ω—è –≥–æ–≤–Ω–æ–∫–æ–¥", "red")
    print(result)

    print(colored("\n—Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ö—ç—à-—Ç–∞–±–ª–∏—Ü—É –º–æ–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ :)", "cyan"))
    
    while True:
        print(colored("\n=== –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ===", "blue"))
        login = input(colored("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: ", "blue"))
        password = input(colored("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ", "blue"))
        password_hash = hashstring(password)
        if db.register(login, password_hash):
            break
        
    while True:
        print(colored("\n=== –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É ===", "blue"))
        login_input = input(colored("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω: ", "blue"))
        pass_input = input(colored("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å: ", "blue"))
        pass_hash = hashstring(pass_input)
        if db.login(login_input, pass_hash):
            break
        

    print(colored("\n=== –ü–æ–ø—ã—Ç–∫–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –ø–æ –∏—Ö —Ö—ç—à—É ===", "blue"))
    for i in range(2):
        print(colored(f"–ü–æ–ø—ã—Ç–∫–∞ {i+1}/2", "yellow"))
        wheakpass = input(colored("–í–≤–µ–¥—É –ø–∞—Ä–æ–ª—å: ", "blue"))
        anothertry = input(colored("–í–≤–µ–¥—É –≤—Ç–æ—Ä–æ–π –ø–∞—Ä–æ–ª—å, –≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ—Ç, –Ω–µ –≤–∞–∂–Ω–æ: ", "blue"))

        print(colored("üîé –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ö–µ—à–µ–π...", "magenta"))
        result = colored("üéâ –ü–∞—Ä–æ–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã ‚ô•", "green") if hashstring(wheakpass) == hashstring(anothertry) else colored("üí• –ü–∞—Ä–æ–ª–∏ —Ä–∞–∑–Ω—ã–µ, —É–ø—Å...", "red")
        print(result)

    print('–°–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è :)')

if __name__ == "__main__":
    db.init_db()
    main()